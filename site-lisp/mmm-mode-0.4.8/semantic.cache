;; Object mmm-mode-0.4.8/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "mmm-mode-0.4.8/"
  :tables (list 
   (semanticdb-table "mmm-region.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("cl" include nil nil [1353 1366]) ("font-lock" include nil nil [1367 1387]) ("mmm-compat" include nil nil [1388 1409]) ("mmm-utils" include nil nil [1410 1430]) ("mmm-auto" include nil nil [1431 1450]) ("mmm-vars" include nil nil [1451 1470]) ("mmm-overlay-at" function (:arguments ("&optional" "pos" "type")) nil [1759 1942]) ("mmm-overlays-at" function (:arguments ("&optional" "pos" "type")) nil [1944 2395]) ("mmm-included-p" function (:arguments ("ovl" "pos" "&optional" "type")) nil [2397 3747]) ("mmm-overlays-containing" function (:arguments ("start" "stop")) nil [3886 4322]) ("mmm-overlays-contained-in" function (:arguments ("start" "stop")) nil [4324 4762]) ("mmm-overlays-overlapping" function (:arguments ("start" "stop")) nil [4764 5125]) ("mmm-sort-overlays" function (:arguments ("overlays")) nil [5127 5366]) ("mmm-current-overlay" variable nil nil [5397 5560]) ("make-variable-buffer-local" code nil nil [5561 5610]) ("mmm-previous-overlay" variable nil nil [5612 5747]) ("make-variable-buffer-local" code nil nil [5748 5798]) ("mmm-current-submode" variable nil nil [5800 5948]) ("make-variable-buffer-local" code nil nil [5949 5998]) ("mmm-previous-submode" variable nil nil [6000 6120]) ("make-variable-buffer-local" code nil nil [6121 6171]) ("mmm-update-current-submode" function (:arguments ("&optional" "pos")) nil [6173 6927]) ("mmm-set-current-submode" function (:arguments ("mode" "&optional" "pos")) nil [6989 7479]) ("mmm-submode-at" function (:arguments ("&optional" "pos" "type")) nil [7481 7707]) ("mmm-match-front" function (:arguments ("ovl")) nil [7756 8515]) ("mmm-match-back" function (:arguments ("ovl")) nil [8517 9260]) ("mmm-front-start" function (:arguments ("ovl")) nil [9262 9564]) ("mmm-back-end" function (:arguments ("ovl")) nil [9566 9853]) ("mmm-valid-submode-region" function (:arguments ("submode" "beg" "end")) nil [9913 11067]) ("mmm-make-region" function (:arguments ("submode" "beg" "end" "&key" "face" "front" "back" "evaporation" "delimiter-mode" "front-face" "back-face" "display-name" "match-front" "match-back" "beg-sticky" "end-sticky" "name" "creation-hook")) nil [11069 16438]) ("mmm-make-overlay" function (:arguments ("submode" "beg" "end" "name" "face" "beg-sticky" "end-sticky" "evap" "&optional" "display-name" "delim")) nil [16440 17571]) ("mmm-get-face" function (:arguments ("face" "submode" "&optional" "delim")) nil [17573 17794]) ("mmm-clear-overlays" function (:arguments ("&optional" "start" "stop" "strict")) nil [17865 18285]) ("mmm-update-mode-info" function (:arguments ("mode" "&optional" "force")) nil [18332 22587]) ("mmm-update-submode-region" function nil nil [22617 23373]) ("mmm-add-hooks" function nil nil [23375 23508]) ("mmm-remove-hooks" function nil nil [23510 23606]) ("mmm-get-local-variables-list" function (:arguments ("type" "mode")) nil [23637 24555]) ("mmm-get-locals" function (:arguments ("type")) nil [24557 25136]) ("mmm-get-saved-local" function (:arguments ("mode" "var")) nil [25138 25301]) ("mmm-set-local-variables" function (:arguments ("mode")) nil [25303 25742]) ("mmm-get-saved-local-variables" function (:arguments ("mode")) nil [25744 26059]) ("mmm-save-changed-local-variables" function (:arguments ("ovl" "mode")) nil [26061 26917]) ("mmm-clear-local-variables" function nil nil [26919 27152]) ("mmm-enable-font-lock" function (:arguments ("mode")) nil [27198 27456]) ("mmm-update-font-lock-buffer" function nil nil [27458 27888]) ("mmm-refontify-maybe" function (:arguments ("&optional" "start" "stop")) nil [27890 28212]) ("mmm-submode-changes-in" function (:arguments ("start" "stop")) nil [28412 28858]) ("mmm-regions-in" function (:arguments ("start" "stop")) nil [28860 29427]) ("mmm-regions-alist" function (:arguments ("start" "stop")) nil [29430 30045]) ("mmm-fontify-region" function (:arguments ("start" "stop" "&optional" "loudly")) nil [30076 31105]) ("mmm-fontify-region-list" function (:arguments ("mode" "regions")) nil [31107 31988]) ("mmm-beginning-of-syntax" function nil nil [32023 32368]) ("mmm-region" package nil nil [32377 32398]))
    :file "mmm-region.el"
    :pointmax 32427
    )
   (semanticdb-table "mmm-vars.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("mmm-compat" include nil nil [1188 1209]) ("mmm-current-submode" variable nil nil [1335 1363]) ("mmm-save-local-variables" variable nil nil [1366 1399]) ("mmm-mode-string" variable nil nil [1402 1426]) ("mmm-submode-mode-line-format" variable nil nil [1429 1466]) ("mmm-mode-ext-classes-alist" variable nil nil [1469 1504]) ("mmm-mode-prefix-key" variable nil nil [1507 1535]) ("mmm-global-mode" variable nil nil [1538 1562]) ("mmm-primary-mode" variable nil nil [1565 1590]) ("mmm-classes-alist" variable nil nil [1593 1619]) ("put" code nil nil [1879 1990]) ("put" code nil nil [1991 2083]) ("put" code nil nil [2175 2292]) ("put" code nil nil [2293 2391]) ("put" code nil nil [2463 2568]) ("put" code nil nil [2569 2663]) ("put" code nil nil [2832 2933]) ("put" code nil nil [2934 3028]) ("defgroup" code nil nil [3082 3156]) ("mmm-c-derived-modes" variable (:default-value (quote (c-mode c++-mode objc-mode pike-mode java-mode jde-mode javascript-mode php-mode))) nil [3192 3309]) ("mmm-save-local-variables" variable (:default-value (\` (major-mode comment-start comment-end (comment-line-start-skip buffer (fortran-mode)) comment-start-skip (comment-column buffer) comment-indent-function comment-line-break-function sentence-end (\,@ (when mmm-xemacs (quote (mode-popup-menu (((lambda nil current-menubar) . set-buffer-menubar)))))) font-lock-keywords font-lock-keywords-only font-lock-keywords-case-fold-search font-lock-syntax-table font-lock-mark-block-function font-lock-syntactic-keywords indent-line-function parse-sexp-ignore-comments (c-basic-offset buffer (c-mode c++-mode objc-mode pike-mode java-mode jde-mode)) (c-class-key nil (\, mmm-c-derived-modes)) (c-extra-toplevel-key nil (\, mmm-c-derived-modes)) (c-inexpr-class-key nil (\, mmm-c-derived-modes)) (c-conditional-key nil (\, mmm-c-derived-modes)) semantic-bovinate-toplevel-override semantic-toplevel-bovine-table (\,@ (mapcar (function (lambda (var) (list var nil mmm-c-derived-modes))) (quote (c++-template-syntax-table c-<-op-cont-regexp c->-op-cont-regexp c-after-suffixed-type-decl-key c-after-suffixed-type-maybe-decl-key c-any-class-key c-any-class-key c-asm-stmt-kwds c-assignment-op-regexp c-backslash-column c-basic-offset c-bitfield-kwds c-block-comment-prefix c-block-decls-with-vars c-block-stmt-1-key c-block-stmt-1-key c-block-stmt-1-kwds c-block-stmt-2-key c-block-stmt-2-key c-block-stmt-2-kwds c-brace-list-key c-cast-parens c-class-key c-class-key c-class-kwds c-cleanup-list c-colon-type-list-re c-comment-only-line-offset c-comment-prefix-regexp c-comment-start-regexp c-comment-start-regexp c-cpp-defined-fns c-current-comment-prefix c-decl-block-key c-decl-block-key c-decl-prefix-re c-decl-spec-kwds c-doc-comment-start-regexp c-expr-kwds c-file-offsets c-file-style c-hanging-braces-alist c-hanging-colons-alist c-hanging-comment-ender-p c-hanging-comment-starter-p c-hanging-semi&comma-criteria c-identifier-key c-identifier-last-sym-match c-identifier-start c-identifier-syntax-modifications c-identifier-syntax-table c-in-comment-lc-prefix c-indent-comment-alist c-indent-comments-syntactically-p c-indentation-style c-inexpr-block-kwds c-inexpr-class-kwds c-keywords c-keywords-obarray c-keywords-regexp c-keywords-regexp c-known-type-key c-label-key c-label-key c-label-kwds c-label-kwds-regexp c-label-kwds-regexp c-label-minimum-indentation c-lambda-kwds c-literal-start-regexp c-nonsymbol-chars c-nonsymbol-token-regexp c-not-decl-init-keywords c-offsets-alist c-opt-<>-arglist-start c-opt-<>-arglist-start-in-paren c-opt-<>-sexp-key c-opt-access-key c-opt-access-key c-opt-asm-stmt-key c-opt-asm-stmt-key c-opt-bitfield-key c-opt-bitfield-key c-opt-block-decls-with-vars-key c-opt-block-stmt-key c-opt-block-stmt-key c-opt-cpp-prefix c-opt-cpp-start c-opt-decl-spec-key c-opt-friend-key c-opt-friend-key c-opt-identifier-concat-key c-opt-inexpr-block-key c-opt-inexpr-block-key c-opt-inexpr-brace-list-key c-opt-inexpr-class-key c-opt-inexpr-class-key c-opt-lambda-key c-opt-lambda-key c-opt-method-key c-opt-method-key c-opt-postfix-decl-spec-key c-opt-type-component-key c-opt-type-concat-key c-opt-type-modifier-key c-opt-type-suffix-key c-other-decl-block-key c-other-decl-block-key c-other-decl-block-kwds c-other-decl-kwds c-overloadable-operators-regexp c-paragraph-separate c-paragraph-start c-paren-stmt-key c-primary-expr-regexp c-primitive-type-key c-primitive-type-kwds c-protection-kwds c-recognize-<>-arglists c-recognize-knr-p c-recognize-knr-p c-recognize-paren-inits c-recognize-typeless-decls c-regular-keywords-regexp c-simple-stmt-key c-simple-stmt-kwds c-special-brace-lists c-special-brace-lists c-specifier-key c-specifier-kwds c-stmt-delim-chars c-stmt-delim-chars-with-comma c-symbol-key c-symbol-key c-symbol-start c-syntactic-eol c-syntactic-ws-end c-syntactic-ws-start c-type-decl-prefix-key c-type-decl-suffix-key c-type-prefix-key comment-end comment-start comment-start-skip)))) skeleton-transformation abbrev-mode local-abbrev-table ((syntax-table . set-syntax-table)) ((current-local-map . use-local-map) buffer) paragraph-separate paragraph-start))) nil [3311 10169]) ("mmm-buffer-saved-locals" variable nil nil [10171 10315]) ("make-variable-buffer-local" code nil nil [10316 10369]) ("mmm-region-saved-locals-defaults" variable nil nil [10371 10566]) ("make-variable-buffer-local" code nil nil [10567 10629]) ("mmm-region-saved-locals-for-dominant" variable nil nil [10631 10912]) ("make-variable-buffer-local" code nil nil [10913 10979]) ("defgroup" code nil nil [11008 11177]) ("mmm-submode-decoration-level" variable (:user-visible-flag t :default-value 1) nil [11179 12049]) ("mmm-init-submode-face" variable (:default-value (quote ((t (:background "Pink"))))) nil [12051 12189]) ("mmm-cleanup-submode-face" variable (:default-value (quote ((t (:background "Wheat"))))) nil [12191 12326]) ("mmm-declaration-submode-face" variable (:default-value (quote ((t (:background "Aquamarine"))))) nil [12328 12472]) ("mmm-comment-submode-face" variable (:default-value (quote ((t (:background "SkyBlue"))))) nil [12474 12625]) ("mmm-output-submode-face" variable (:default-value (quote ((t (:background "Plum"))))) nil [12627 12774]) ("mmm-special-submode-face" variable (:default-value (quote ((t (:background "MediumSpringGreen"))))) nil [12776 12938]) ("mmm-code-submode-face" variable (:default-value (quote ((t (:background "LightGray"))))) nil [12940 13077]) ("mmm-default-submode-face" variable (:default-value (quote ((t (:background "gray85"))))) nil [13079 13285]) ("mmm-delimiter-face" variable nil nil [13287 13381]) ("mmm-mode-string" variable (:user-visible-flag t :default-value " MMM") nil [13413 13542]) ("mmm-submode-mode-line-format" variable (:user-visible-flag t :default-value "~M[~m]") nil [13544 14197]) ("mmm-primary-mode-display-name" variable nil nil [14199 14351]) ("make-variable-buffer-local" code nil nil [14352 14411]) ("mmm-buffer-mode-display-name" variable nil nil [14413 14651]) ("make-variable-buffer-local" code nil nil [14652 14710]) ("mmm-set-mode-line" function nil nil [14712 15489]) ("mmm-classes" variable (:user-visible-flag t) nil [15520 15721]) ("make-variable-buffer-local" code nil nil [15722 15763]) ("mmm-global-classes" variable (:user-visible-flag t :default-value (quote (universal))) nil [15765 15911]) ("mmm-mode-ext-classes-alist" variable nil nil [15947 16763]) ("mmm-add-mode-ext-class" function (:arguments ("mode" "ext" "class")) nil [16765 17053]) ("mmm-major-mode-preferences" variable (:default-value (quote ((perl cperl-mode perl-mode) (javascript javascript-mode c++-mode) (java jde-mode java-mode c++-mode) (css css-mode c++-mode)))) nil [17090 17886]) ("mmm-add-to-major-mode-preferences" function (:arguments ("language" "mode" "&optional" "default")) nil [17888 18672]) ("mmm-ensure-modename" function (:arguments ("symbol")) nil [18674 18982]) ("mmm-modename->function" function (:arguments ("mode")) nil [18984 19414]) ("mmm-delimiter-mode" variable (:default-value (quote fundamental-mode)) nil [19447 19688]) ("mmm-mode-prefix-key" variable (:default-value [(control 99) 37]) nil [19716 19841]) ("mmm-command-modifiers" variable (:default-value (quote (control))) nil [19843 20474]) ("mmm-insert-modifiers" variable (:default-value (quote nil)) nil [20476 21152]) ("mmm-use-old-command-keys" variable nil nil [21154 21616]) ("mmm-use-old-command-keys" function nil nil [21618 21792]) ("mmm-mode-hook" variable nil nil [21817 22622]) ("mmm-run-constructed-hook" function (:arguments ("body" "&optional" "suffix")) nil [22624 23008]) ("mmm-run-major-hook" function nil nil [23010 23085]) ("mmm-run-submode-hook" function (:arguments ("submode")) nil [23087 23172]) ("mmm-class-hooks-run" variable nil nil [23174 23294]) ("make-variable-buffer-local" code nil nil [23295 23344]) ("mmm-run-class-hook" function (:arguments ("class")) nil [23346 23516]) ("mmm-primary-mode-entry-hook" variable nil nil [23518 24076]) ("make-variable-buffer-local" code nil nil [24077 24134]) ("mmm-major-mode-hook" variable nil nil [24165 24794]) ("mmm-run-major-mode-hook" function nil nil [24796 24903]) ("mmm-global-mode" variable (:user-visible-flag t) nil [25337 25896]) ("mmm-never-modes" variable (:default-value (quote (help-mode Info-mode dired-mode comint-mode telnet-mode shell-mode eshell-mode forms-mode))) nil [26032 26300]) ("mmm-set-file-name-for-modes" variable (:default-value (quote (mew-draft-mode))) nil [26332 26639]) ("mmm-mode" variable nil nil [26691 26832]) ("make-variable-buffer-local" code nil nil [26833 26871]) ("mmm-primary-mode" variable nil nil [26899 26978]) ("make-variable-buffer-local" code nil nil [26979 27025]) ("mmm-classes-alist" variable nil nil [27265 35470]) ("mmm-add-classes" function (:arguments ("classes")) nil [35472 35635]) ("mmm-add-group" function (:arguments ("group" "classes")) nil [35637 36085]) ("mmm-add-to-group" function (:arguments ("group" "classes")) nil [36087 36554]) ("mmm-version" variable (:constant-flag t :default-value "0.4.8") nil [36584 36647]) ("mmm-version" function nil nil [36649 36760]) ("mmm-temp-buffer-name" variable (:default-value " *mmm-temp*") nil [36792 36887]) ("mmm-interactive-history" variable nil nil [36922 37135]) ("make-variable-buffer-local" code nil nil [37136 37189]) ("mmm-add-to-history" function (:arguments ("class")) nil [37191 37272]) ("mmm-clear-history" function (:user-visible-flag t) nil [37274 37422]) ("mmm-mode-ext-classes" variable nil nil [37459 37617]) ("make-variable-buffer-local" code nil nil [37618 37668]) ("mmm-get-mode-ext-classes" function nil nil [37670 38044]) ("mmm-clear-mode-ext-classes" function nil nil [38046 38169]) ("mmm-mode-ext-applies" function (:arguments ("element")) nil [38171 38653]) ("mmm-get-all-classes" function (:arguments ("global")) nil [38655 39073]) ("mmm-vars" package nil nil [39082 39101]))
    :file "mmm-vars.el"
    :pointmax 39129
    :unmatched-syntax 'nil
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0pre3"
  :semanticdb-version "2.0pre3"
  )
